{"version":3,"sources":["AlertCollapse/AlertCollapse.js","LineAlerts/LineAlerts.js","TrainModal/TrainModal.js","LineTrains/LineTrains.js","LinePage/LinePage.js","LineDropdown/LineDropdown.js","reducers.js","MyNavbar/MySignUpModal/MySignUpModal.js","MyNavbar/MyLogInModal/MyLogInModal.js","MyNavbar/MyAccountModal/ChangePasswordModal/ChangePasswordModal.js","MyNavbar/MyAccountModal/MyAccountModal.js","MyNavbar/MyNavbar.js","HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["AlertCollapse","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","collapse","setState","react_default","a","createElement","Button","color","onClick","style","marginBottom","alertHeader","Collapse","isOpen","Card","CardBody","id","alertDetails","alertId","Component","connect","LinePage","mapAlerts","alerts","alertsTitle","_this2","axios","post","url","then","result","data","_this3","alertsArray","body","map","item","alert","informed_entity","itemEntity","route_id","line","push","header_text","translation","text","description_text","trip","concat","length","src_AlertCollapse_AlertCollapse","key","TrainModal","loadTrainData","modal","tripStops","prevState","i","stop_id","arrival_time","console","log","tripId","Modal","className","ModalHeader","ModalBody","ModalFooter","React","LineTrains","filterTripsByCalendar","filterStopsByLine","changeStartStop","changeEndStop","searchForTrains","updateTable","stopStartOptions","stopEndOptions","todaysTrains","startStop","endStop","trainList","searchResults","showSearchResults","tableData","showTrainModal","Axios","unfilteredStops","filteredStartStops","filteredEndStops","stop_url","search","unshift","stop_name","value","unfilteredTrips","_this4","todaysCalendarDates","currentPageReducer","calendarDates","filteredTrips","filter","todaysFilteredTrips","service_id","_this5","trip_id","j","k","arr","src_TrainModal_TrainModal","departure_time","e","target","_this6","Input","type","placeholder","onChange","Table","src_LineTrains_LineTrains","LineAlerts_LineAlerts","LineDropdown","selectLine","dropdownOpen","dispatch","currentPage","src_LinePage_LinePage","innerHTML","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","combineReducers","action","src_LineDropdown_LineDropdown","objectSpread","logInReducer","logInUsername","logInPassword","showPassword","createAccountReducer","createUsername","createPassword1","createPassword2","changePasswordReducer","oldPassword","newPassword1","newPassword2","cookie","Cookies","MySignUpModal","signUpUser","onCreatePassword1Change","onCreatePassword2Change","onCreateUsernameChange","onShowPasswordChange","get","account","username","password","dateCreated","Date","toLocaleString","passwordMatchCheck","MyLogInModal","logInUser","onLogInPasswordChange","onLogInUsernameChange","message","localStorage","setItem","myToken","set","user","accountUsername","logInGreeting","ChangePasswordModal","onOldPasswordChange","onNewPassword1Change","onNewPassword2Change","changePassword","MyAccountModal","accountDetails","MyAccountModal_ChangePasswordModal_ChangePasswordModal","MyNavbar","logOutUser","clear","remove","window","location","reload","logOutButton","logInButton","MyNavbar_MyLogInModal_MyLogInModal","navbarDropdownName","MyNavbar_MyAccountModal_MyAccountModal","hidden","Navbar","light","expand","href","NavbarToggler","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","right","MyNavbar_MySignUpModal_MySignUpModal","HomePage","getCalendarDates","src_MyNavbar_MyNavbar","store","createStore","reducer","App","es","src_HomePage_HomePage","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b490c17.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './AlertCollapse.css';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass AlertCollapse extends Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = { collapse: false };\n    }\n\n    toggle() {\n        this.setState(state => ({ collapse: !state.collapse }));\n    }\n\n    render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: '1rem' }}>{this.props.alertHeader}</Button>\n                <Collapse isOpen={this.state.collapse}>\n                    <Card>\n                        <CardBody id='alert-collapse-body'>\n                            {this.props.alertDetails}\n                            {this.props.alertId}\n                        </CardBody>\n                    </Card>\n                </Collapse>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(AlertCollapse);","import React, { Component } from 'react';\nimport './LineAlerts.css';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport AlertCollapse from '../AlertCollapse/AlertCollapse.js';\n\nclass LinePage extends Component {\n    constructor() {\n        super();\n        this.mapAlerts = this.mapAlerts.bind(this);\n        this.state = {\n            alerts: '',\n            alertsTitle: null\n        }\n    }\n\n    componentDidMount() {\n        axios.post('/access-api', { url: 'alerts' }).then((result) => {\n            this.mapAlerts(result.data)\n        });\n    }\n\n    mapAlerts(data) {\n        let alertsArray = [];\n        data.body.map((item) => {\n            return item.alert.informed_entity.map((itemEntity) => {\n                if (itemEntity.route_id) {\n                    if (itemEntity.route_id === this.props.line) {\n                        return alertsArray.push({\n                            alertHeader: item.alert.header_text.translation[0].text,\n                            alertDetails: item.alert.description_text.translation[0].text,\n                            alertId: item.id\n                        })\n                    }\n                } else if(itemEntity.trip){\n                    if (itemEntity.trip.route_id === this.props.line) {\n                        return alertsArray.push({\n                            alertHeader: item.alert.header_text.translation[0].text,\n                            alertDetails: item.alert.description_text.translation[0].text,\n                            alertId: item.id\n                        })\n                    }\n                }\n                return null;\n            })\n        })\n        this.setState({\n            alertsTitle: `Alerts: ${alertsArray.length}`,\n            alerts: alertsArray.map((item) => {\n                return <AlertCollapse key={item.alertId} alertHeader={item.alertHeader} alertDetails={item.alertDetails} />\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div id='alerts-container'>\n                    <p>{this.state.alertsTitle}<br />Click Alert To View More Details</p>\n                    {this.state.alerts}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(LinePage);","import React from 'react';\nimport './TrainModal.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass TrainModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.loadTrainData = this.loadTrainData.bind(this);\n        this.state = {\n            modal: false,\n            tripStops: null\n        };\n\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    componentDidMount() {\n        this.loadTrainData()\n    }\n\n    loadTrainData() {\n        this.setState({\n            tripStops: this.props.data.map((item, i) =>{\n                return <li key={i}>{item.stop_id} - {item.arrival_time}</li>\n            })\n        })\n    }\n\n    render() {\n        console.log(this.props.data)\n        return (\n            <div>\n                <Button color=\"danger\" onClick={this.toggle}>{this.props.tripId}</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>{this.props.tripId}</ModalHeader>\n                    <ModalBody>\n                    <ol>{this.state.tripStops}</ol>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(TrainModal);","import React, { Component } from 'react';\nimport './LineTrains.css';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\nimport { Input } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport TrainModal from '../TrainModal/TrainModal';\n\nclass LineTrains extends Component {\n    constructor() {\n        super();\n        this.filterTripsByCalendar = this.filterTripsByCalendar.bind(this);\n        this.filterStopsByLine = this.filterStopsByLine.bind(this);\n        this.changeStartStop = this.changeStartStop.bind(this);\n        this.changeEndStop = this.changeEndStop.bind(this);\n        this.searchForTrains = this.searchForTrains.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.state = {\n            stopStartOptions: [],\n            stopEndOptions: [],\n            todaysTrains: [],\n            startStop: '',\n            endStop: '',\n            trainList: '',\n            searchResults: [],\n            showSearchResults: '',\n            tableData: null,\n            showTrainModal: null\n        }\n    }\n\n    componentDidMount() {\n        if (!this.state.startStop) {\n            Axios.post('/access-api', { url: 'schedule/trips' }).then((result) => {\n                this.filterTripsByCalendar(result)\n            });\n            Axios.post('access-api', { url: 'schedule/stops' }).then((result) => {\n                this.filterStopsByLine(result)\n            });\n        }\n    }\n\n    filterStopsByLine(unfilteredStops) {\n        let filteredStartStops = [];\n        let filteredEndStops = [];\n        unfilteredStops.data.body.map((item) => {\n            if (item.stop_url.search(this.props.line) !== -1) {\n                filteredStartStops.push(item);\n                filteredEndStops.unshift(item);\n            }\n            return null;\n        });\n        filteredStartStops.push({ stop_id: 'CUS', stop_name: 'Chicago Union Station' })\n        filteredEndStops.unshift({ stop_id: 'CUS', stop_name: 'Chicago Union Station' })\n        this.setState({\n            stopStartOptions: filteredStartStops.map((item, i) => {\n                return <option key={i} value={item.stop_id}>{item.stop_name}</option>\n            }),\n            stopEndOptions: filteredEndStops.map((item, i) => {\n                return <option key={i} value={item.stop_id}>{item.stop_name}</option>\n            }),\n            startStop: filteredStartStops[0].stop_id,\n            endStop: filteredEndStops[0].stop_id\n        })\n    }\n\n    filterTripsByCalendar(unfilteredTrips) {\n        var todaysCalendarDates = this.props.currentPageReducer.calendarDates\n        var filteredTrips = unfilteredTrips.data.body.filter(trip => trip.route_id === this.props.line);\n        let todaysFilteredTrips = [];\n        filteredTrips.map((item) => {\n            for (let i = 0; i < todaysCalendarDates.length; i++) {\n                if (item.service_id === todaysCalendarDates[i]) {\n                    todaysFilteredTrips.push(item);\n                }\n            }\n            return null;\n        })\n        this.setState({\n            todaysTrains: todaysFilteredTrips\n        });\n    }\n\n    searchForTrains() {\n        let searchResults = [];\n        for (let i = 0; i < this.state.todaysTrains.length; i++) {\n            Axios.post('/access-api', { url: `schedule/stop_times/${this.state.todaysTrains[i].trip_id}` }).then((result) => {\n                for (let j = 0; j < result.data.body.length; j++) {\n                    if (result.data.body[j].stop_id === this.state.startStop) {\n                        for (let k = j; k < result.data.body.length; k++) {\n                            if (result.data.body[k].stop_id === this.state.endStop) {\n                                searchResults.push(result.data.body);\n                                this.setState({\n                                    searchResults: searchResults\n                                });\n                                this.updateTable(searchResults);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    updateTable(data) {\n        // data.sort((a, b) => {\n        //     a = a[0].departure_time.replace(':', '');\n        //     b = b[0].departure_time.replace(':', '');\n        //     if (parseInt(a) < parseInt(b)) {\n        //         return -1;\n        //     }\n        //     if (parseInt(a) > parseInt(b)) {\n        //         return 1;\n        //     }\n        //     return 0;\n        // })\n        this.setState({\n            tableData: data.map((item, i, arr) => {\n                return <tr key={i}>\n                    <td><TrainModal tripId={item[0].trip_id} data={item} /></td>\n                    <td>{item[0].departure_time}</td>\n                    <td>{item[item.length - 1].arrival_time}</td>\n                </tr>\n            })\n        })\n    }\n\n    changeStartStop(e) {\n        this.setState({\n            startStop: e.target.value\n        });\n    }\n\n    changeEndStop(e) {\n        this.setState({\n            endStop: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div id='line-trains-container'>\n                    From:\n                    <Input type='select' placeholder='test' onChange={this.changeStartStop} >\n                        {this.state.stopStartOptions}\n                    </Input>\n                    <br />\n                    To:\n                    <Input type='select' onChange={this.changeEndStop}>\n                        {this.state.stopEndOptions}\n                    </Input>\n                    <br />\n                    <button onClick={this.searchForTrains}>Search</button>\n                    <button onClick={() => console.log(this.state.searchResults)}>Test</button>\n                    <div id='search-results-table-container'>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>{this.state.startStop}</th>\n                                    <th>{this.state.endStop}</th>\n                                </tr>\n                            </thead>\n                            <tbody>{this.state.tableData}</tbody>\n                        </Table>\n                        {this.state.showTrainModal}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(LineTrains);","import React, { Component } from 'react';\nimport './LinePage.css';\nimport { connect } from 'react-redux';\nimport LineAlerts from '../LineAlerts/LineAlerts';\nimport LineTrains from '../LineTrains/LineTrains';\n\nclass LinePage extends Component {\n    render() {\n        return (\n            <div>\n                <p>{this.props.line}</p>\n                <LineTrains line={this.props.line}/>\n                <LineAlerts line={this.props.line} />\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(LinePage);","import React from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport './LineDropdown.css';\nimport LinePage from '../LinePage/LinePage.js';\nimport { connect } from 'react-redux';\n\nclass LineDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.selectLine = this.selectLine.bind(this);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    selectLine(e) {\n        this.props.dispatch({\n            type: 'changeCurrentPage',\n            currentPage: <LinePage line={e.target.innerHTML}/>\n        });\n    }\n\n    render() {\n        return (\n            <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                <DropdownToggle caret>\n                    Choose Your Line\n        </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={this.selectLine}>MD-N</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>NCS</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>UP-N</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>UP-NW</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>HC</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>ME</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>RI</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>SWS</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>BNSF</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>MD-W</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>UP-W</DropdownItem>\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect((state) => (state))(LineDropdown);","import React from 'react';\nimport { combineReducers } from 'redux';\nimport LineDropdown from './LineDropdown/LineDropdown';\n\nconst currentPageReducer = (state, action) => {\n    if (!state) {\n        state = {\n            currentPage: <LineDropdown />,\n            calendarDates: []\n        }\n    }\n    switch (action.type) {\n        case \"changeCurrentPage\":\n            return state = {\n                ...state,\n                currentPage: action.currentPage,\n            }\n        case \"changeCalendarDates\":\n            return state = {\n                ...state,\n                calendarDates: action.calendarDates\n            }\n        default:\n            return state = {\n                ...state\n            }\n    }\n}\n\nconst createAccountReducer = (state, action) => {\n    if (!state) {\n        state = {\n            createUsername: \"\",\n            createPassword1: \"\",\n            createPassword2: \"\",\n            showPassword: \"password\"\n        }\n    }\n    switch (action.type) {\n        case \"changeCreateUsername\":\n            return state = {\n                ...state,\n                createUsername: action.createUsername\n            }\n        case \"changeCreatePassword1\":\n            return state = {\n                ...state,\n                createPassword1: action.createPassword1\n            }\n        case \"changeCreatePassword2\":\n            return state = {\n                ...state,\n                createPassword2: action.createPassword2\n            }\n        case \"changeShowPassword\":\n            return state = {\n                ...state,\n                showPassword: action.showPassword\n            }\n        case \"resetCreateAccount\":\n            return state = {\n                createUsername: \"\",\n                createPassword1: \"\",\n                createPassword2: \"\",\n                showPassword: \"password\",\n            }\n        default:\n            return state = {\n                ...state,\n            }\n    }\n}\n\nconst changePasswordReducer = (state, action) => {\n    if (!state) {\n        state = {\n            oldPassword: \"\",\n            newPassword1: \"\",\n            newPassword2: \"\",\n            showPassword: \"password\"\n        }\n    }\n    switch (action.type) {\n        case \"changeOldPassword\":\n            return state = {\n                ...state,\n                oldPassword: action.oldPassword\n            }\n        case \"changeNewPassword1\":\n            return state = {\n                ...state,\n                newPassword1: action.newPassword1\n            }\n        case \"changeNewPassword2\":\n            return state = {\n                ...state,\n                newPassword2: action.newPassword2\n            }\n        case \"changeShowPassword\":\n            return state = {\n                ...state,\n                showPassword: action.showPassword\n            }\n        case \"resetChangePassword\":\n            return state = {\n                oldPassword: \"\",\n                newPassword1: \"\",\n                newPassword2: \"\",\n                showPassword: \"password\",\n            }\n        default:\n            return state = {\n                ...state,\n            }\n    }\n}\n\nconst logInReducer = (state, action) => {\n    if (!state) {\n        state = {\n            logInUsername: \"\",\n            logInPassword: \"\",\n            showPassword: \"password\",\n        }\n    }\n    switch (action.type) {\n        case \"changeLogInUsername\":\n            return state = {\n                ...state,\n                logInUsername: action.logInUsername\n            }\n        case \"changeLogInPassword\":\n            return state = {\n                ...state,\n                logInPassword: action.logInPassword\n            }\n        case \"changeLogInShowPassword\":\n            return state = {\n                ...state,\n                showPassword: action.showPassword\n            }\n        case \"resetLogInData\":\n            return state = {\n                logInUsername: \"\",\n                logInPassword: \"\",\n                showPassword: \"password\",\n            }\n        default:\n            return state = {\n                ...state,\n            }\n    }\n}\n\nexport default combineReducers({\n    currentPageReducer,\n    logInReducer,\n    createAccountReducer,\n    changePasswordReducer,\n});\n\n// import { connect } from 'react-redux';\n// export default connect((state) => (state))(StaticDotsOptions);","import React from 'react';\nimport './MySignUpModal.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst cookie = new Cookies();\n\nclass MySignUpModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.signUpUser = this.signUpUser.bind(this);\n        this.toggle = this.toggle.bind(this);\n        this.onCreatePassword1Change = this.onCreatePassword1Change.bind(this);\n        this.onCreatePassword2Change = this.onCreatePassword2Change.bind(this);\n        this.onCreateUsernameChange = this.onCreateUsernameChange.bind(this);\n        this.onShowPasswordChange = this.onShowPasswordChange.bind(this);\n        this.state = {\n            modal: false\n        };\n    }\n\n    toggle() {\n        if (cookie.get('username')) {\n            return alert('Please log out before creating a new account')\n        }\n        if (this.state.modal === false) {\n            this.props.dispatch({\n                type: \"resetCreateAccount\",\n            })\n        }\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    signUpUser() {\n        let account = this.props.createAccountReducer\n        if (account.createPassword1 !== account.createPassword2) {\n            return alert(\"Passwords must match\");\n        } else if (!account.createPassword1) {\n            return alert(\"Password can't be blank\");\n        } else if (account.createPassword1.length < 6) {\n            return alert(\"Password must be at least 6 characters long\");\n        } else if (!account.createUsername) {\n            return alert(\"Username can't be blank\");\n        }\n        axios.post(\"/signUpData\", { username: account.createUsername, password: account.createPassword1, dateCreated: new Date().toLocaleString(),}).then((result) => {\n            if (result.data === \"Sign Up Successful\") {\n                alert(result.data);\n                this.toggle();\n            } else {\n                alert(result.data);\n            }\n        })\n    }\n\n    onCreatePassword1Change(e) {\n        this.props.dispatch({\n            type: \"changeCreatePassword1\",\n            createPassword1: e.target.value\n        })\n    }\n\n    onCreatePassword2Change(e) {\n        this.props.dispatch({\n            type: \"changeCreatePassword2\",\n            createPassword2: e.target.value\n        })\n    }\n\n    onCreateUsernameChange(e) {\n        this.props.dispatch({\n            type: \"changeCreateUsername\",\n            createUsername: e.target.value\n        })\n    }\n\n    onShowPasswordChange() {\n        if (this.props.createAccountReducer.showPassword === \"password\") {\n            this.props.dispatch({\n                type: \"changeShowPassword\",\n                showPassword: \"text\"\n            })\n        } else if (this.props.createAccountReducer.showPassword === \"text\") {\n            this.props.dispatch({\n                type: \"changeShowPassword\",\n                showPassword: \"password\"\n            })\n        }\n    }\n\n    render() {\n        var passwordMatchCheck = \"Red\";\n        if (this.props.createAccountReducer.createPassword1 === this.props.createAccountReducer.createPassword2) {\n            passwordMatchCheck = \"Black\";\n        }\n        return (\n            <div>\n                <Button onClick={this.toggle}>Create Account</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Create Account</ModalHeader>\n                    <ModalBody>\n                        <div>\n                            <p>Username</p>\n                            <Input type=\"text\" value={this.props.createAccountReducer.createUsername} onChange={this.onCreateUsernameChange} />\n                            <p>Password</p>\n                            <Input type={this.props.createAccountReducer.showPassword} value={this.props.createAccountReducer.createPassword1} onChange={this.onCreatePassword1Change} />\n                            <small id=\"password-requirements\">\n                                <ul>\n                                    <li>At least 6 characters</li>\n                                    <li>At least one capital letter</li>\n                                </ul>\n                            </small>\n                            <span>Re-Type Password</span>\n                            <Input style={{\n                                \"color\": `${passwordMatchCheck}`\n                            }} type={this.props.createAccountReducer.showPassword} value={this.props.createAccountReducer.createPassword2} onChange={this.onCreatePassword2Change} />\n                            <small><input type=\"checkbox\" onChange={this.onShowPasswordChange} />Show Password</small>\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.signUpUser}>Create Account</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(MySignUpModal);","import React from 'react';\nimport './MyLogInModal.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst cookie = new Cookies();\n\nclass MyLogInModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.logInUser = this.logInUser.bind(this);\n        this.toggle = this.toggle.bind(this);\n        this.onLogInPasswordChange = this.onLogInPasswordChange.bind(this);\n        this.onLogInUsernameChange = this.onLogInUsernameChange.bind(this);\n        this.onShowPasswordChange = this.onShowPasswordChange.bind(this);\n        this.state = {\n            modal: false\n        };\n    }\n\n    toggle() {\n        if (this.state.modal === false) {\n            this.props.dispatch({\n                type: \"resetLogInData\",\n            })\n        }\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    logInUser() {\n        if(cookie.get('username')) {\n            return alert('You are already logged in. If you would like to use a different account, please log out and then back in.')\n        }\n        axios.post(\"/userLogIn\", { username: this.props.logInReducer.logInUsername, password: this.props.logInReducer.logInPassword }).then((result) => {\n            if (result.data.message === \"Login successful!\") {\n                localStorage.setItem('token', result.data.myToken);\n                cookie.set('username', result.data.user.username);\n                cookie.set('data', result.data.user);\n                this.props.dispatch({\n                    type: \"changeLogInStatus\",\n                    accountUsername: result.data.user.username,\n                    logInGreeting: result.data.user.username\n                });\n            } else {\n                return alert(result.data.message);\n            }\n        })\n    }\n\n    onLogInPasswordChange(e) {\n        this.props.dispatch({\n            type: \"changeLogInPassword\",\n            logInPassword: e.target.value\n        })\n    }\n\n    onLogInUsernameChange(e) {\n        this.props.dispatch({\n            type: \"changeLogInUsername\",\n            logInUsername: e.target.value\n        })\n    }\n\n    onShowPasswordChange() {\n        if (this.props.logInReducer.showPassword === \"password\") {\n            this.props.dispatch({\n                type: \"changeLogInShowPassword\",\n                showPassword: \"text\"\n            })\n        } else if (this.props.logInReducer.showPassword === \"text\") {\n            this.props.dispatch({\n                type: \"changeLogInShowPassword\",\n                showPassword: \"password\"\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Button color=\"success\" onClick={this.toggle}>Log In</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Log In</ModalHeader>\n                    <ModalBody>\n                        <div>\n                            <p>Username</p>\n                            <Input type=\"text\" value={this.props.logInReducer.logInUsername} onChange={this.onLogInUsernameChange} />\n                            <p>Password</p>\n                            <Input type={this.props.logInReducer.showPassword} value={this.props.logInReducer.logInPassword} onChange={this.onLogInPasswordChange} />\n                            <small><input type=\"checkbox\" onChange={this.onShowPasswordChange} />Show Password</small>\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button type=\"submit\" color=\"success\" onClick={this.logInUser}>Log In</Button>{' '}\n                        <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(MyLogInModal);\n","import React from 'react';\nimport './ChangePasswordModal.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst cookie = new Cookies();\n\nclass ChangePasswordModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.onOldPasswordChange = this.onOldPasswordChange.bind(this);\n        this.onNewPassword1Change = this.onNewPassword1Change.bind(this);\n        this.onNewPassword2Change = this.onNewPassword2Change.bind(this);\n        this.onShowPasswordChange = this.onShowPasswordChange.bind(this);\n        this.changePassword = this.changePassword.bind(this);\n        this.state = {\n            modal: false\n        };\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    onOldPasswordChange(e) {\n        this.props.dispatch({\n            type: \"changeOldPassword\",\n            oldPassword: e.target.value\n        })\n    }\n\n    onNewPassword1Change(e) {\n        this.props.dispatch({\n            type: \"changeNewPassword1\",\n            newPassword1: e.target.value\n        })\n    }\n\n    onNewPassword2Change(e) {\n        this.props.dispatch({\n            type: \"changeNewPassword2\",\n            newPassword2: e.target.value\n        })\n    }\n\n    onShowPasswordChange() {\n        if (this.props.changePasswordReducer.showPassword === \"password\") {\n            this.props.dispatch({\n                type: \"changeShowPassword\",\n                showPassword: \"text\"\n            })\n        } else if (this.props.changePasswordReducer.showPassword === \"text\") {\n            this.props.dispatch({\n                type: \"changeShowPassword\",\n                showPassword: \"password\"\n            })\n        }\n    }\n\n    changePassword() {\n        let account = this.props.changePasswordReducer\n        if (account.newPassword1 !== account.newPassword2) {\n            return alert(\"Passwords must match\");\n        } else if (!account.newPassword1) {\n            return alert(\"Password can't be blank\");\n        } else if (account.newPassword1.length < 6) {\n            return alert(\"Password must be at least 6 characters long\");\n        }\n        axios.post(\"/changePassword\", { username: cookie.get('username'), oldPassword: account.oldPassword, newPassword1: account.newPassword1 }).then((result) => {\n            if (result.data === \"Successfully updated password\") {\n                alert(result.data);\n                this.toggle();\n            } else {\n                alert(result.data);\n            }\n        })\n    }\n\n    render() {\n        var passwordMatchCheck = \"Red\";\n        if (this.props.changePasswordReducer.newPassword1 === this.props.changePasswordReducer.newPassword2) {\n            passwordMatchCheck = \"Black\";\n        }\n        return (\n            <div>\n                <Button color=\"info\" onClick={this.toggle}>Change Password</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Change Password</ModalHeader>\n                    <ModalBody>\n                        <div>\n                            <p>Old Password</p>\n                            <Input type=\"password\" value={this.props.changePasswordReducer.oldPassword} onChange={this.onOldPasswordChange} />\n                            <p>New Password</p>\n                            <Input type={this.props.changePasswordReducer.showPassword} value={this.props.changePasswordReducer.newPassword1} onChange={this.onNewPassword1Change} />\n                            <small><input type=\"checkbox\" onChange={this.onShowPasswordChange} />Show Password</small>\n                            <p>Re-Type New Password</p>\n                            <Input style={{\n                                \"color\": `${passwordMatchCheck}`\n                            }} type=\"password\" value={this.props.changePasswordReducer.newPassword2} onChange={this.onNewPassword2Change} />\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={this.changePassword}>Submit</Button>\n                        <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(ChangePasswordModal);","import React from 'react';\nimport './MyAccountModal.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\n// import axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport ChangePasswordModal from './ChangePasswordModal/ChangePasswordModal.js';\n\nconst cookie = new Cookies();\n\nclass MyAccountModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            modal: false\n        };\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    render() {\n        let accountDetails = cookie.get('data')\n        return (\n            <div>\n                <Button color=\"info\" onClick={this.toggle}>Account</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Account</ModalHeader>\n                    <ModalBody>\n                        <p>Account Name: {accountDetails.username}</p>\n                        <p>Date Created: {accountDetails.dateCreated}</p>\n                    </ModalBody>\n                    <ModalFooter>\n                        <div id=\"account-btns-div\">\n                            <Button id=\"account-done-btn\" onClick={this.toggle}>Done</Button>\n                            <ChangePasswordModal  id=\"account-password-btn\" />\n                            {/* <Button onClick={this.toggle}>Change Password</Button> */}\n                        </div>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(MyAccountModal);\n","import React, { Component } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport MySignUpModal from './MySignUpModal/MySignUpModal';\nimport MyLogInModal from './MyLogInModal/MyLogInModal.js';\nimport Cookies from 'universal-cookie';\nimport './MyNavbar.css';\nimport MyAccountModal from './MyAccountModal/MyAccountModal.js';\n\nconst cookie = new Cookies();\n\nclass MyNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.logOutUser = this.logOutUser.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  logOutUser() {\n    localStorage.clear();\n    cookie.remove('data');\n    cookie.remove('username');\n    window.location.reload();\n  }\n\n  render() {\n    var logOutButton;\n    var logInButton = <MyLogInModal />;\n    var navbarDropdownName = 'Log In/Create Account';\n    var logInGreeting = 'Guest';\n    if (cookie.get('username')) {\n      logOutButton = <Button color=\"danger\" onClick={this.logOutUser}>Log Out</Button>\n      logInButton = <MyAccountModal />;\n      navbarDropdownName = 'Account';\n      logInGreeting = cookie.get('username');\n    }\n    return (\n      <div id=\"navbar-div\" hidden={this.props.currentPageReducer.hidden}>\n        <Navbar color=\"light\" light expand=\"md\">\n          <Button color=\"muted\" href='/'>Home</Button>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink>User: {logInGreeting}</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  {navbarDropdownName}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    {logInButton}\n                  </DropdownItem>\n                  <DropdownItem>\n                    {logOutButton}\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    <MySignUpModal />\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => (state))(MyNavbar);","import React, { Component } from 'react';\nimport './HomePage.css';\nimport { connect } from 'react-redux';\nimport MyNavbar from '../MyNavbar/MyNavbar.js';\nimport Axios from 'axios';\n\nclass HomePage extends Component {\n    constructor() {\n        super();\n        this.getCalendarDates = this.getCalendarDates.bind(this);\n    }\n\n    getCalendarDates() {\n        if (!this.props.currentPageReducer.calendarDates.length) {\n            Axios.post('/access-api', { url: 'schedule/calendar_dates' }).then((result) => {\n                this.props.dispatch({\n                    type: 'changeCalendarDates',\n                    calendarDates: result.data.body.map((item) => item.service_id)\n                });\n            });\n        }\n        // Axios.post('/access-api', { url: 'schedule/stop_times/BNSF_BN1201_V1_A' }).then((result) => {\n        //     console.log(result.data)\n        // });\n    }\n\n    componentDidMount() {\n        this.getCalendarDates()\n    }\n\n    render() {\n        return (\n            <div id='homepage-container'>\n                <MyNavbar />\n                {this.props.currentPageReducer.currentPage}\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(HomePage);","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from \"./reducers\";\nimport HomePage from './HomePage/HomePage';\n\nconst store = createStore(reducer);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store} >\n        <div className=\"App\">\n          <HomePage />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}