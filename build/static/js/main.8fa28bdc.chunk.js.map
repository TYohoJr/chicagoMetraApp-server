{"version":3,"sources":["AlertCollapse/AlertCollapse.js","LineAlerts/LineAlerts.js","TrainModal/TrainModal.js","LineTrains/LineTrains.js","LinePage/LinePage.js","LineDropdown/LineDropdown.js","reducers.js","MyNavbar/MyNavbar.js","HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["AlertCollapse","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","collapse","setState","react_default","a","createElement","Button","color","onClick","style","marginBottom","alertHeader","Collapse","isOpen","Card","CardBody","id","alertDetails","alertId","Component","connect","LinePage","mapAlerts","alerts","alertsTitle","_this2","axios","post","url","then","result","data","_this3","alertsArray","body","map","item","alert","informed_entity","itemEntity","route_id","line","push","header_text","translation","text","description_text","trip","concat","length","src_AlertCollapse_AlertCollapse","key","TrainModal","loadTrainData","modal","tripStops","prevState","stop_id","arrival_time","slice","console","log","tripId","Modal","className","ModalHeader","ModalBody","ModalFooter","React","LineTrains","filterTripsByCalendar","filterStopsByLine","changeStartStop","changeEndStop","searchForTrains","updateTable","stopStartOptions","stopEndOptions","todaysTrains","startStop","endStop","trainList","searchResults","showSearchResults","tableData","Axios","unfilteredStops","filteredStartStops","filteredEndStops","stop_url","search","unshift","stop_name","i","value","unfilteredTrips","_this4","todaysCalendarDates","currentPageReducer","calendarDates","filteredTrips","filter","todaysFilteredTrips","service_id","_this5","trip_id","j","k","sort","b","departure_time","replace","parseInt","arr","src_TrainModal_TrainModal","e","target","_this6","Input","type","placeholder","onChange","Table","src_LineTrains_LineTrains","LineAlerts_LineAlerts","LineDropdown","selectLine","dropdownOpen","dispatch","currentPage","src_LinePage_LinePage","innerHTML","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","combineReducers","action","src_LineDropdown_LineDropdown","objectSpread","MyNavbar","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","navbar","Nav","UncontrolledDropdown","nav","inNavbar","right","HomePage","getCalendarDates","src_MyNavbar_MyNavbar","store","createStore","reducer","App","es","src_HomePage_HomePage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fa28bdc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './AlertCollapse.css';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass AlertCollapse extends Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = { collapse: false };\n    }\n\n    toggle() {\n        this.setState(state => ({ collapse: !state.collapse }));\n    }\n\n    render() {\n        return (\n            <div>\n                <Button color=\"primary\" onClick={this.toggle} style={{ marginBottom: '1rem' }}>{this.props.alertHeader}</Button>\n                <Collapse isOpen={this.state.collapse}>\n                    <Card>\n                        <CardBody id='alert-collapse-body'>\n                            {this.props.alertDetails}\n                            {this.props.alertId}\n                        </CardBody>\n                    </Card>\n                </Collapse>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(AlertCollapse);","import React, { Component } from 'react';\nimport './LineAlerts.css';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport AlertCollapse from '../AlertCollapse/AlertCollapse.js';\n\nclass LinePage extends Component {\n    constructor() {\n        super();\n        this.mapAlerts = this.mapAlerts.bind(this);\n        this.state = {\n            alerts: '',\n            alertsTitle: null\n        }\n    }\n\n    componentDidMount() {\n        axios.post('/access-api', { url: 'alerts' }).then((result) => {\n            this.mapAlerts(result.data)\n        });\n    }\n\n    mapAlerts(data) {\n        let alertsArray = [];\n        data.body.map((item) => {\n            return item.alert.informed_entity.map((itemEntity) => {\n                if (itemEntity.route_id) {\n                    if (itemEntity.route_id === this.props.line) {\n                        return alertsArray.push({\n                            alertHeader: item.alert.header_text.translation[0].text,\n                            alertDetails: item.alert.description_text.translation[0].text,\n                            alertId: item.id\n                        })\n                    }\n                } else if(itemEntity.trip){\n                    if (itemEntity.trip.route_id === this.props.line) {\n                        return alertsArray.push({\n                            alertHeader: item.alert.header_text.translation[0].text,\n                            alertDetails: item.alert.description_text.translation[0].text,\n                            alertId: item.id\n                        })\n                    }\n                }\n                return null;\n            })\n        })\n        this.setState({\n            alertsTitle: `Alerts: ${alertsArray.length}`,\n            alerts: alertsArray.map((item) => {\n                return <AlertCollapse key={item.alertId} alertHeader={item.alertHeader} alertDetails={item.alertDetails} />\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div id='alerts-container'>\n                    <p>{this.state.alertsTitle}<br />Click Alert To View More Details</p>\n                    {this.state.alerts}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(LinePage);","import React from 'react';\nimport './TrainModal.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass TrainModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.loadTrainData = this.loadTrainData.bind(this);\n        this.state = {\n            modal: false,\n            tripStops: null\n        };\n\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    componentDidMount() {\n        this.loadTrainData()\n    }\n\n    loadTrainData() {\n        this.setState({\n            tripStops: this.props.data.map((item) =>{\n                return <li>{item.stop_id} - {item.arrival_time.slice(0, 5)}</li>\n            })\n        })\n    }\n\n    render() {\n        console.log(this.props.data)\n        return (\n            <div>\n                <Button color=\"danger\" onClick={this.toggle}>{this.props.tripId}</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n                    <ModalBody>\n                    <ol>{this.state.tripStops}</ol>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(TrainModal);","import React, { Component } from 'react';\nimport './LineTrains.css';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\nimport { Input } from 'reactstrap';\nimport { Table } from 'reactstrap';\nimport TrainModal from '../TrainModal/TrainModal';\n\nclass LineTrains extends Component {\n    constructor() {\n        super();\n        this.filterTripsByCalendar = this.filterTripsByCalendar.bind(this);\n        this.filterStopsByLine = this.filterStopsByLine.bind(this);\n        this.changeStartStop = this.changeStartStop.bind(this);\n        this.changeEndStop = this.changeEndStop.bind(this);\n        this.searchForTrains = this.searchForTrains.bind(this);\n        this.updateTable = this.updateTable.bind(this);\n        this.state = {\n            stopStartOptions: [],\n            stopEndOptions: [],\n            todaysTrains: [],\n            startStop: '',\n            endStop: '',\n            trainList: '',\n            searchResults: [],\n            showSearchResults: '',\n            tableData: null\n        }\n    }\n\n    componentDidMount() {\n        if (!this.state.startStop) {\n            Axios.post('/access-api', { url: 'schedule/trips' }).then((result) => {\n                this.filterTripsByCalendar(result)\n            });\n            Axios.post('access-api', { url: 'schedule/stops' }).then((result) => {\n                this.filterStopsByLine(result)\n            });\n        }\n    }\n\n    filterStopsByLine(unfilteredStops) {\n        let filteredStartStops = [];\n        let filteredEndStops = [];\n        unfilteredStops.data.body.map((item) => {\n            if (item.stop_url.search(this.props.line) !== -1) {\n                filteredStartStops.push(item);\n                filteredEndStops.unshift(item);\n            }\n            return null;\n        });\n        filteredStartStops.push({ stop_id: 'CUS', stop_name: 'Chicago Union Station' })\n        filteredEndStops.unshift({ stop_id: 'CUS', stop_name: 'Chicago Union Station' })\n        this.setState({\n            stopStartOptions: filteredStartStops.map((item, i) => {\n                return <option key={i} value={item.stop_id}>{item.stop_name}</option>\n            }),\n            stopEndOptions: filteredEndStops.map((item, i) => {\n                return <option key={i} value={item.stop_id}>{item.stop_name}</option>\n            }),\n            startStop: filteredStartStops[0].stop_id,\n            endStop: filteredEndStops[0].stop_id\n        })\n    }\n\n    filterTripsByCalendar(unfilteredTrips) {\n        var todaysCalendarDates = this.props.currentPageReducer.calendarDates\n        var filteredTrips = unfilteredTrips.data.body.filter(trip => trip.route_id === this.props.line);\n        let todaysFilteredTrips = [];\n        filteredTrips.map((item) => {\n            for (let i = 0; i < todaysCalendarDates.length; i++) {\n                if (item.service_id === todaysCalendarDates[i]) {\n                    todaysFilteredTrips.push(item);\n                }\n            }\n            return null;\n        })\n        this.setState({\n            todaysTrains: todaysFilteredTrips\n        });\n    }\n\n    searchForTrains() {\n        let searchResults = [];\n        for (let i = 0; i < this.state.todaysTrains.length; i++) {\n            Axios.post('/access-api', { url: `schedule/stop_times/${this.state.todaysTrains[i].trip_id}` }).then((result) => {\n                for (let j = 0; j < result.data.body.length; j++) {\n                    if (result.data.body[j].stop_id === this.state.startStop) {\n                        for (let k = j; k < result.data.body.length; k++) {\n                            if (result.data.body[k].stop_id === this.state.endStop) {\n                                searchResults.push(result.data.body);\n                                this.setState({\n                                    searchResults: searchResults\n                                });\n                                this.updateTable(searchResults);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    updateTable(data) {\n        // console.log(new Date().toLocaleTimeString());\n        data.sort((a, b) => {\n            a = a[0].departure_time.replace(':', '');\n            b = b[0].departure_time.replace(':', '');\n            if (parseInt(a) < parseInt(b)) {\n                return -1;\n            }\n            if (parseInt(a) > parseInt(b)) {\n                return 1;\n            }\n            return 0;\n        })\n        this.setState({\n            tableData: data.map((item, i, arr) => {\n                return <tr key={i}>\n                    {/* <td><button onClick={() => this.selectTrain(item)}>{item[0].trip_id}</button></td> */}\n                    <TrainModal tripId={item[0].trip_id} data={item}/>\n                    <td>{item[0].departure_time}</td>\n                    <td>{item[item.length - 1].arrival_time}</td>\n                </tr>\n            })\n        })\n    }\n\n    changeStartStop(e) {\n        this.setState({\n            startStop: e.target.value\n        });\n    }\n\n    changeEndStop(e) {\n        this.setState({\n            endStop: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div id='line-trains-container'>\n                    From:\n                    <Input type='select' placeholder='test' onChange={this.changeStartStop} >\n                        {this.state.stopStartOptions}\n                    </Input>\n                    <br />\n                    To:\n                    <Input type='select' onChange={this.changeEndStop}>\n                        {this.state.stopEndOptions}\n                    </Input>\n                    <br />\n                    <button onClick={this.searchForTrains}>Search</button>\n                    <button onClick={() => console.log(this.state.searchResults)}>Test</button>\n                    <div id='search-results-table-container'>\n                        <Table>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>{this.state.startStop}</th>\n                                    <th>{this.state.endStop}</th>\n                                </tr>\n                            </thead>\n                            <tbody>{this.state.tableData}</tbody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(LineTrains);","import React, { Component } from 'react';\nimport './LinePage.css';\nimport { connect } from 'react-redux';\nimport LineAlerts from '../LineAlerts/LineAlerts';\nimport LineTrains from '../LineTrains/LineTrains';\n\nclass LinePage extends Component {\n    render() {\n        return (\n            <div>\n                <p>{this.props.line}</p>\n                <LineTrains line={this.props.line}/>\n                <LineAlerts line={this.props.line} />\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(LinePage);","import React from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport './LineDropdown.css';\nimport LinePage from '../LinePage/LinePage.js';\nimport { connect } from 'react-redux';\n\nclass LineDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.selectLine = this.selectLine.bind(this);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    selectLine(e) {\n        this.props.dispatch({\n            type: 'changeCurrentPage',\n            currentPage: <LinePage line={e.target.innerHTML}/>\n        });\n    }\n\n    render() {\n        return (\n            <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                <DropdownToggle caret>\n                    Choose Your Line\n        </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={this.selectLine}>MD-N</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>NCS</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>UP-N</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>UP-NW</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>HC</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>ME</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>RI</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>SWS</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>BNSF</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>MD-W</DropdownItem>\n                    <DropdownItem divider />\n                    <DropdownItem onClick={this.selectLine}>UP-W</DropdownItem>\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect((state) => (state))(LineDropdown);","import React from 'react';\nimport { combineReducers } from 'redux';\nimport LineDropdown from './LineDropdown/LineDropdown';\n\nconst currentPageReducer = (state, action) => {\n    if (!state) {\n        state = {\n            currentPage: <LineDropdown />,\n            calendarDates: []\n        }\n    }\n    switch (action.type) {\n        case \"changeCurrentPage\":\n            return state = {\n                ...state,\n                currentPage: action.currentPage,\n            }\n        case \"changeCalendarDates\":\n            return state = {\n                ...state,\n                calendarDates: action.calendarDates\n            }\n        default:\n            return state = {\n                ...state\n            }\n    }\n}\n\nexport default combineReducers({\n    currentPageReducer\n});\n\n// import { connect } from 'react-redux';\n// export default connect((state) => (state))(StaticDotsOptions);","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass MyNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarBrand href=\"/\">Home</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Log In/Create Account\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    Log In\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    Create Account\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => (state))(MyNavbar);","import React, { Component } from 'react';\nimport './HomePage.css';\nimport { connect } from 'react-redux';\nimport MyNavbar from '../MyNavbar/MyNavbar.js';\nimport Axios from 'axios';\n\nclass HomePage extends Component {\n    constructor() {\n        super();\n        this.getCalendarDates = this.getCalendarDates.bind(this);\n    }\n\n    getCalendarDates() {\n        if (!this.props.currentPageReducer.calendarDates.length) {\n            Axios.post('/access-api', { url: 'schedule/calendar_dates' }).then((result) => {\n                this.props.dispatch({\n                    type: 'changeCalendarDates',\n                    calendarDates: result.data.body.map((item) => item.service_id)\n                });\n            });\n        }\n        // Axios.post('/access-api', { url: 'schedule/stop_times/BNSF_BN1201_V1_A' }).then((result) => {\n        //     console.log(result.data)\n        // });\n    }\n\n    componentDidMount() {\n        this.getCalendarDates()\n    }\n\n    render() {\n        return (\n            <div id='homepage-container'>\n                <MyNavbar />\n                {this.props.currentPageReducer.currentPage}\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(HomePage);","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from \"./reducers\";\nimport HomePage from './HomePage/HomePage';\n\nconst store = createStore(reducer);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store} >\n        <div className=\"App\">\n          <HomePage />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}